{"version":3,"file":"static/development/pages/register.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Layout.tsx","webpack:///./components/fields/InputField.tsx","webpack:///./generated/apolloComponents.tsx","webpack:///./pages/register.tsx","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"formik\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-apollo\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import * as React from 'react'\nimport Link from 'next/link'\nimport Head from 'next/head'\n\ntype Props = {\n  title?: string,\n}\n\nconst Layout: React.FunctionComponent<Props> = ({ children, title = 'This is the default layout' }) => (\n\t<div>\n\t\t<Head>\n\t\t\t<title>{title}</title>\n\t\t\t<meta charSet='utf-8' />\n\t\t\t<meta name='viewport' content='initial-scale=1.0, width=device-width' />\n\t\t</Head>\n\t\t<header>\n\t\t\t<nav>\n\t\t\t\t<Link href='/'><a>Home</a></Link> | {' '}\n\t\t\t\t{/* <Link href='/list-fc'><a>List as Functional Component</a></Link> | {' '}\n\t\t\t\t<Link href='/list-class'><a>List As Class</a></Link> | {' '} */}\n\t\t\t\t<Link href='/login'><a>Login</a></Link> | {' '}\n\t\t\t\t<Link href='/about'><a>About</a></Link> | {' '}\n\t\t\t\t<Link href='/register'><a>Register</a></Link> | {' '}\n\t\t\t</nav>\n\t\t</header>\n\t\t\t{children}\n\t\t<footer>\n\t\t\t<hr />\n\t\t\t<span>I'm here to stay (Footer)</span>\n\t\t</footer>\n\t</div>\n)\n\nexport default Layout\n","\nimport React, { DetailedHTMLProps, InputHTMLAttributes } from 'react'\nimport { FieldProps } from 'formik'\n\ntype InputProps = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\nexport const InputField = ({field, form: { errors, touched }, ...props}: FieldProps & InputProps) => {\n    const errorMessage = touched[field.name] && errors[field.name]\n    return (\n        <div>\n            <input {...field} {...props} />\n            {\n                errorMessage && <div style={{color: 'red'}}>{errorMessage}</div>\n            }\n        </div>\n    )\n}","export type Maybe<T> = T | null;\n\nexport interface ChangePasswordInput {\n  password: string;\n\n  token: string;\n}\n\nexport interface RegisterInput {\n  password: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n}\n\n/** The `Upload` scalar type represents a file upload. */\nexport type Upload = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport type LoginVariables = {\n  email: string;\n  password: string;\n};\n\nexport type LoginMutation = {\n  __typename?: \"Mutation\";\n\n  login: Maybe<LoginLogin>;\n};\n\nexport type LoginLogin = {\n  __typename?: \"User\";\n\n  id: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n\n  name: string;\n};\n\nexport type RegisterVariables = {\n  data: RegisterInput;\n};\n\nexport type RegisterMutation = {\n  __typename?: \"Mutation\";\n\n  register: RegisterRegister;\n};\n\nexport type RegisterRegister = {\n  __typename?: \"User\";\n\n  id: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n\n  name: string;\n};\n\nimport * as ReactApollo from \"react-apollo\";\nimport * as React from \"react\";\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Components\n// ====================================================\n\nexport const LoginDocument = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      id\n      firstName\n      lastName\n      email\n      name\n    }\n  }\n`;\nexport class LoginComponent extends React.Component<\n  Partial<ReactApollo.MutationProps<LoginMutation, LoginVariables>>\n> {\n  render() {\n    return (\n      <ReactApollo.Mutation<LoginMutation, LoginVariables>\n        mutation={LoginDocument}\n        {...(this as any)[\"props\"] as any}\n      />\n    );\n  }\n}\nexport type LoginProps<TChildProps = any> = Partial<\n  ReactApollo.MutateProps<LoginMutation, LoginVariables>\n> &\n  TChildProps;\nexport type LoginMutationFn = ReactApollo.MutationFn<\n  LoginMutation,\n  LoginVariables\n>;\nexport function LoginHOC<TProps, TChildProps = any>(\n  operationOptions:\n    | ReactApollo.OperationOption<\n        TProps,\n        LoginMutation,\n        LoginVariables,\n        LoginProps<TChildProps>\n      >\n    | undefined\n) {\n  return ReactApollo.graphql<\n    TProps,\n    LoginMutation,\n    LoginVariables,\n    LoginProps<TChildProps>\n  >(LoginDocument, operationOptions);\n}\nexport const RegisterDocument = gql`\n  mutation Register($data: RegisterInput!) {\n    register(data: $data) {\n      id\n      firstName\n      lastName\n      email\n      name\n    }\n  }\n`;\nexport class RegisterComponent extends React.Component<\n  Partial<ReactApollo.MutationProps<RegisterMutation, RegisterVariables>>\n> {\n  render() {\n    return (\n      <ReactApollo.Mutation<RegisterMutation, RegisterVariables>\n        mutation={RegisterDocument}\n        {...(this as any)[\"props\"] as any}\n      />\n    );\n  }\n}\nexport type RegisterProps<TChildProps = any> = Partial<\n  ReactApollo.MutateProps<RegisterMutation, RegisterVariables>\n> &\n  TChildProps;\nexport type RegisterMutationFn = ReactApollo.MutationFn<\n  RegisterMutation,\n  RegisterVariables\n>;\nexport function RegisterHOC<TProps, TChildProps = any>(\n  operationOptions:\n    | ReactApollo.OperationOption<\n        TProps,\n        RegisterMutation,\n        RegisterVariables,\n        RegisterProps<TChildProps>\n      >\n    | undefined\n) {\n  return ReactApollo.graphql<\n    TProps,\n    RegisterMutation,\n    RegisterVariables,\n    RegisterProps<TChildProps>\n  >(RegisterDocument, operationOptions);\n}\n","\nimport * as React from 'react'\nimport Router from 'next/router';\nimport { Formik, Field } from 'formik'\n\nimport Layout from '../components/Layout'\nimport { InputField } from '../components/fields/InputField'\nimport { RegisterComponent } from '../generated/apolloComponents'\n\nexport default () => {\n\treturn (\n\t\t<Layout title=\"Register page\">\n\t\t\t<h1>Register ðŸ‘‹</h1>\n            <RegisterComponent>\n                {(register) => (\n                    <Formik\n                        onSubmit={async (data, { setErrors }) => {\n                            try {\n                                const response = await register({\n                                    variables: {\n                                        data\n                                    }\n                                })\n                                if (response) console.log(response)\n                                Router.push('/check-email')\n                            } catch (err) {\n                                const errors: { [key: string]: string } = {}\n                                err.graphQLErrors[0].validationErrors.forEach((validationErrors: any) => {\n                                    Object.values(validationErrors.constraints).forEach(\n                                        (message: any) => {\n                                            errors[validationErrors.property] = message\n                                        }\n                                    )\n                                })\n                                setErrors(errors)\n                            }\n                        }}\n                        initialValues={{\n                            email: '',\n                            firstName: '',\n                            lastName: '',\n                            password: ''\n                        }}\n                    >\n                        {\n                            ({values, handleSubmit}) => <form onSubmit={handleSubmit}>\n                                <Field\n                                    name=\"firstName\"\n                                    placeholder=\"first name\"\n                                    component={InputField}\n                                />\n                                <Field\n                                    name=\"lastName\"\n                                    placeholder=\"last name\"\n                                    component={InputField}\n                                />\n                                <Field\n                                    name=\"email\"\n                                    placeholder=\"email\"\n                                    component={InputField}\n                                />\n                                <Field\n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    type=\"password\"\n                                    component={InputField}\n                                />\n                                <button\n                                    type=\"submit\"\n                                >\n                                    Register\n                                </button>\n                            </form>\n                        }\n                    </Formik>\n                )}\n            </RegisterComponent>\n\t\t</Layout>\n\t)\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"formik\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/head\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxpBA;AACA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;AAGA;AACA;AACA;AAmDA;AACA;AACA;AAGA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAVA;AACA;AADA;AAAA;AAoBA;AAUA;AAMA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAVA;AACA;AADA;AAAA;AAoBA;AAUA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChLA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AADA;AACA;AAHA;AAEA;AAKA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AAJA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AA/BA;AAiEA;;;;;;;;;;;;;;;;;;;;;;;AC/EA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}