{"version":3,"file":"static/webpack/static/development/pages/register.js.aa8b9766a729a598f71b.hot-update.js","sources":["webpack:///./generated/apolloComponents.tsx","webpack:///./pages/register.tsx"],"sourcesContent":["export type Maybe<T> = T | null;\n\nexport interface ChangePasswordInput {\n  password: string;\n\n  token: string;\n}\n\nexport interface RegisterInput {\n  password: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n}\n\n/** The `Upload` scalar type represents a file upload. */\nexport type Upload = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport type LoginVariables = {\n  email: string;\n  password: string;\n};\n\nexport type LoginMutation = {\n  __typename?: \"Mutation\";\n\n  login: Maybe<LoginLogin>;\n};\n\nexport type LoginLogin = {\n  __typename?: \"User\";\n\n  id: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n\n  name: string;\n};\n\nexport type RegisterVariables = {\n  data: RegisterInput;\n};\n\nexport type RegisterMutation = {\n  __typename?: \"Mutation\";\n\n  register: RegisterRegister;\n};\n\nexport type RegisterRegister = {\n  __typename?: \"User\";\n\n  id: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n\n  name: string;\n};\n\nimport * as ReactApollo from \"react-apollo\";\nimport * as React from \"react\";\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Components\n// ====================================================\n\nexport const LoginDocument = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      id\n      firstName\n      lastName\n      email\n      name\n    }\n  }\n`;\nexport class LoginComponent extends React.Component<\n  Partial<ReactApollo.MutationProps<LoginMutation, LoginVariables>>\n> {\n  render() {\n    return (\n      <ReactApollo.Mutation<LoginMutation, LoginVariables>\n        mutation={LoginDocument}\n        {...(this as any)[\"props\"] as any}\n      />\n    );\n  }\n}\nexport type LoginProps<TChildProps = any> = Partial<\n  ReactApollo.MutateProps<LoginMutation, LoginVariables>\n> &\n  TChildProps;\nexport type LoginMutationFn = ReactApollo.MutationFn<\n  LoginMutation,\n  LoginVariables\n>;\nexport function LoginHOC<TProps, TChildProps = any>(\n  operationOptions:\n    | ReactApollo.OperationOption<\n        TProps,\n        LoginMutation,\n        LoginVariables,\n        LoginProps<TChildProps>\n      >\n    | undefined\n) {\n  return ReactApollo.graphql<\n    TProps,\n    LoginMutation,\n    LoginVariables,\n    LoginProps<TChildProps>\n  >(LoginDocument, operationOptions);\n}\nexport const RegisterDocument = gql`\n  mutation Register($data: RegisterInput!) {\n    register(data: $data) {\n      id\n      firstName\n      lastName\n      email\n      name\n    }\n  }\n`;\nexport class RegisterComponent extends React.Component<\n  Partial<ReactApollo.MutationProps<RegisterMutation, RegisterVariables>>\n> {\n  render() {\n    return (\n      <ReactApollo.Mutation<RegisterMutation, RegisterVariables>\n        mutation={RegisterDocument}\n        {...(this as any)[\"props\"] as any}\n      />\n    );\n  }\n}\nexport type RegisterProps<TChildProps = any> = Partial<\n  ReactApollo.MutateProps<RegisterMutation, RegisterVariables>\n> &\n  TChildProps;\nexport type RegisterMutationFn = ReactApollo.MutationFn<\n  RegisterMutation,\n  RegisterVariables\n>;\nexport function RegisterHOC<TProps, TChildProps = any>(\n  operationOptions:\n    | ReactApollo.OperationOption<\n        TProps,\n        RegisterMutation,\n        RegisterVariables,\n        RegisterProps<TChildProps>\n      >\n    | undefined\n) {\n  return ReactApollo.graphql<\n    TProps,\n    RegisterMutation,\n    RegisterVariables,\n    RegisterProps<TChildProps>\n  >(RegisterDocument, operationOptions);\n}\n","\nimport Link from 'next/link'\nimport * as React from 'react'\n\nimport { Formik, Field } from 'formik'\n\nimport Layout from '../components/Layout'\nimport { InputField } from '../components/fields/InputField';\n\nimport { RegisterComponent } from '../generated/apolloComponents'\n\nconst RegisterPage: React.FunctionComponent = () => {\n\treturn (\n\t\t<Layout title=\"Register page\">\n\t\t\t<h1>Register ðŸ‘‹</h1>\n\t\t\t<p>\n\t\t\t\t<Link href='/about'>\n\t\t\t\t\t<a>About</a>\n\t\t\t\t</Link>\n\t\t\t</p>\n            <RegisterComponent>\n                {() => (\n                    <Formik\n                        onSubmit={(values) => {console.log(values)}}\n                        initialValues={{\n                            email: '',\n                            firstName: '',\n                            lastName: '',\n                            password: ''\n                        }}\n                    >\n                        {\n                            ({values, handleSubmit}) => <form onSubmit={handleSubmit}>\n                                <Field\n                                    name=\"firstName\"\n                                    placeholder=\"first name\"\n                                    component={InputField}\n                                />\n                                <Field\n                                    name=\"lastName\"\n                                    placeholder=\"last name\"\n                                    component={InputField}\n                                />\n                                <Field\n                                    name=\"email\"\n                                    placeholder=\"email\"\n                                    component={InputField}\n                                />\n                                <Field\n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    type=\"password\"\n                                    component={InputField}\n                                />\n                                <button\n                                    type=\"submit\"\n                                >\n                                    Register\n                                </button>\n                            </form>\n                        }\n                    </Formik>\n                )}\n            </RegisterComponent>\n\t\t</Layout>\n\t)\n}\n\nexport default RegisterPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;AAGA;AACA;AACA;AAmDA;AACA;AACA;AAGA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAVA;AACA;AADA;AAAA;AAoBA;AAUA;AAMA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAVA;AACA;AADA;AAAA;AAoBA;AAUA;AAMA;;;;;;;;;;;;;;;;;;;;;;AChtBA;AAXA;AA6CA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}